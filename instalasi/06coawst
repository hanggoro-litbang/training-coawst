###### INSTALASI COAWST ######
#pastikan semua module sudah terload
#ml list
#jika tidak gunakan perintah 'ml restore coa_mod'
#1. Copy file
#pastikan ada di $HOME masing-masing
cp ${TRAIN_DIR}/software/COAWST_v3.7_final.zip .

#2. Unzip file
unzip COAWST_v3.7_final.zip
ls
mv COAWST-COAWST_v3.7_final/ COAWST
cd COAWST

#3. Compile MCT-LIB
mkdir MCT-LIB
cd Lib/MCT
export NETCDF=/opt/ohpc/pub/apps/netcdf-4.7.3
./configure --prefix=${HOME}/COAWST/MCT-LIB F90=gfortran
make
make install
ls ${HOME}/COAWST/MCT-LIB

#4. Compile SCRIP
cd ${HOME}/COAWST/Lib/SCRIP_COAWST
gedit makefile
# change the compiler option from ifort to gfortran

=============================================
    10 #FORT = ifort
    11  FORT = gfortran
    12 #FORT  = pgi
=============================================
make

# if gfortran: error: unrecognized command line option '-fallow-argument-mismatch'
gedit ${HOME}/COAWST/Compilers/Linux-gfortran.mk

=======================================================================
     35                FC := gfortran
     36            FFLAGS := -frepack-arrays
     37        FIXEDFLAGS := -ffixed-form
     38         FREEFLAGS := -ffree-form -ffree-line-length-none
=======================================================================
#hapus -fallow-argument-mismatch pada line 36

#if f951: sorry, unimplemented: Graphite loop optimizations cannot be used (isl is not available)
gedit ${HOME}/COAWST/Compilers/Linux-gfortran.mk

===============================================================================
    181            FFLAGS += -O3
    182 #           I do not use -ffast-math it does not maintain enough accuracy!
    183            FFLAGS += -ftree-vectorize -funroll-loops -w -ffree-form -ffree-line-length-none -frecord-marker=4 -fconvert=big-endian
    184 ##                   -fconvert=big-endian
    185            CFLAGS += -O3
    186          CXXFLAGS += -O3
================================================================================
#hapus  -ftree-loop-linear  pada line 183

make

# Compile COAWST (Sandy Case)
cd ${HOME}/COAWST

gedit coawst.bash

=================================================================================
    121 # Set the CPP option defining the particular application. This will
    122 # determine the name of the ".h" header file with the application
    123 # CPP definitions. Also this will activate the switch file for WW3.
    124 export   COAWST_APPLICATION=SANDY
...
...
    130 # Set a local environmental variable to define the path to the directories
    131 # where all this project's files are kept.
    132 export   MY_ROOT_DIR=/home/trainer/COAWST
    133 export   MY_PROJECT_DIR=${MY_ROOT_DIR}
...
...
    162 #export   NETCDF_CONFIG=${NETCDF_LIBDIR}/../bin/nc-config
    163 #    This may require nf-config, depending on your system.
    164 export   NETCDF_CONFIG=/opt/ohpc/pub/apps/netcdf-4.7.3/bin/nf-config
    165 #export   NETCDF_CONFIG=/vortexfs1/apps/impistack-1.0/bin/nf-config
...
...
    212 #export              FORT=ifort
    213 export              FORT=gfortran
    214 #export              FORT=pgi
...
...
    455 #  export     MY_HEADER_DIR=${MY_PROJECT_DIR}/ROMS/Include
    456 #  export MY_ANALYTICAL_DIR=${MY_PROJECT_DIR}/ROMS/Functionals
    457    export     MY_HEADER_DIR=${MY_PROJECT_DIR}/Projects/Sandy
    458    export MY_ANALYTICAL_DIR=${MY_PROJECT_DIR}/Projects/Sandy
====================================================================================

vi ${HOME}/COAWST/Projects/Sandy/sandy.h
 
export NETCDF=/opt/ohpc/pub/apps/netcdf-4.7.3
export WRF_EM_CORE=1
export NETCDF4=1
export HDF5=/opt/ohpc/pub/apps/hdf5-1.10.4
export jasper=/opt/ohpc/pub/apps/jasper-1.900.1
export JASPERLIB=/opt/ohpc/pub/apps/jasper-1.900.1/lib
export JASPERINC=/opt/ohpc/pub/apps/jasper-1.900.1/include
export WRF_DA_CORE=0
export WRFIO_NCD_LARGE_FILE_SUPPORT=1
export MCT_INCDIR=${HOME}/COAWST/MCT-LIB/include
export MCT_LIBDIR=${HOME}/COAWST/MCT-LIB/lib

script build.log
./coawst.bash -j 10
#pilih opsi 34 dmpar gfortran
#pilih opsi 1 basic
exit

mv coawstM coawstM.sandy

$5. Run Sandy Case
cd ${HOME}/COAWST
cp /opt/ohpc/pub/examples/slurm/job.mpi .
gedit job.mpi

===============================================================================================
      1 #!/bin/bash
      2
      3 #SBATCH -J coawst.sandy               # Job name
      4 #SBATCH -o coawst_sandy.log           # Name of stdout output file (%j expands to jobId)
      5 #SBATCH -N 1                          # Total number of nodes requested
      6 #SBATCH -n 3                          # Total number of mpi tasks requested
      7 #SBATCH -t 01:30:00                   # Run time (hh:mm:ss) - 1.5 hours
      8
      9 ml restore coa_mod
     10 cd ${HOME}/COAWST
     11 # Launch MPI-based executable
     12 mpirun ./coawstM.sandy Projects/Sandy/coupling_sandy.in > cwst_sandy.out
==============================================================================================

ln -sf  Projects/Sandy/namelist.input .
ln -sf  Projects/Sandy/wrfbdy_d01 .
ln -sf  Projects/Sandy/wrfinput_d0* .
ln -sf  Projects/Sandy/wrflowinp_d0* .
ln -sf WRF/run/RRTM* .
ln -sf WRF/run/ozone* .
ln -sf WRF/run/*.TBL .

sbatch job.mpi
